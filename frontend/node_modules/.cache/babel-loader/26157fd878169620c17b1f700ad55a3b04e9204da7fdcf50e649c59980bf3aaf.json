{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSE_408\\\\frontend\\\\src\\\\pages\\\\CreateBlogPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport './CreateBlogPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_URL;\nconst CreateBlogPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const [destination, setDestination] = useState('');\n  const [mediaFiles, setMediaFiles] = useState([]);\n  const [thumbnailFile, setThumbnailFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [mediaLoading, setMediaLoading] = useState(false);\n  const [thumbnailLoading, setThumbnailLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState(false);\n  const [touched, setTouched] = useState({\n    title: false,\n    content: false,\n    destination: false\n  });\n  const fileInputRef = useRef(null);\n  const thumbnailInputRef = useRef(null);\n  useEffect(() => {\n    // Debug log to see user data\n    console.log('Current user data:', user);\n    // Get stored user data as backup\n    const storedUser = JSON.parse(localStorage.getItem('user'));\n    console.log('Stored user data:', storedUser);\n\n    // If no user data is available, redirect to login\n    if (!user && !storedUser) {\n      navigate('/login');\n    }\n  }, [user, navigate]);\n  const handleMediaUpload = event => {\n    const files = Array.from(event.target.files);\n    if (files.length === 0) return;\n    setMediaLoading(true);\n    setError('');\n    const newMediaFiles = [];\n    files.forEach(file => {\n      // Check file size (limit to 50MB)\n      if (file.size > 50 * 1024 * 1024) {\n        setError(`File ${file.name} is too large. Maximum size is 50MB.`);\n        return;\n      }\n      const mediaFile = {\n        file,\n        type: file.type.startsWith('image/') ? 'image' : 'video',\n        preview: URL.createObjectURL(file),\n        fileName: file.name,\n        fileSize: file.size,\n        mimeType: file.type\n      };\n      newMediaFiles.push(mediaFile);\n    });\n    setMediaFiles(prev => [...prev, ...newMediaFiles]);\n    setMediaLoading(false);\n  };\n  const handleThumbnailUpload = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    setThumbnailLoading(true);\n    setError('');\n\n    // Check if it's an image\n    if (!file.type.startsWith('image/')) {\n      setError('Thumbnail must be an image file.');\n      setThumbnailLoading(false);\n      return;\n    }\n\n    // Check file size (limit to 10MB for thumbnails)\n    if (file.size > 10 * 1024 * 1024) {\n      setError(`Thumbnail ${file.name} is too large. Maximum size is 10MB.`);\n      setThumbnailLoading(false);\n      return;\n    }\n    const thumbnailData = {\n      file,\n      preview: URL.createObjectURL(file),\n      fileName: file.name,\n      fileSize: file.size,\n      mimeType: file.type\n    };\n    setThumbnailFile(thumbnailData);\n    setThumbnailLoading(false);\n  };\n  const removeMedia = index => {\n    const newMediaFiles = [...mediaFiles];\n    URL.revokeObjectURL(newMediaFiles[index].preview);\n    newMediaFiles.splice(index, 1);\n    setMediaFiles(newMediaFiles);\n  };\n  const removeThumbnail = () => {\n    if (thumbnailFile && thumbnailFile.preview) {\n      URL.revokeObjectURL(thumbnailFile.preview);\n    }\n    setThumbnailFile(null);\n  };\n  const handleBlur = field => {\n    setTouched(prev => ({\n      ...prev,\n      [field]: true\n    }));\n  };\n  const validateForm = () => {\n    const errors = {\n      title: !title.trim() ? 'Title is required' : '',\n      content: !content.trim() ? 'Content is required' : '',\n      destination: !destination.trim() ? 'Destination is required' : ''\n    };\n\n    // Set all fields as touched when validating\n    setTouched({\n      title: true,\n      content: true,\n      destination: true\n    });\n    return errors;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const validationErrors = validateForm();\n    if (Object.values(validationErrors).some(error => error)) {\n      setError('Please fill in all required fields');\n      return;\n    }\n    setLoading(true);\n    setError('');\n    setSuccess(false);\n    const storedUser = JSON.parse(localStorage.getItem('user'));\n    const userId = (user === null || user === void 0 ? void 0 : user.id) || (storedUser === null || storedUser === void 0 ? void 0 : storedUser.id);\n    if (!userId) {\n      setError('User ID not found. Please log in again.');\n      setLoading(false);\n      return;\n    }\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setError('Authentication token not found. Please log in again.');\n      setLoading(false);\n      return;\n    }\n    try {\n      // First, upload media files if any\n      let uploadedMediaUrls = [];\n      if (mediaFiles.length > 0) {\n        for (let i = 0; i < mediaFiles.length; i++) {\n          const mediaFile = mediaFiles[i];\n          const formData = new FormData();\n          formData.append('file', mediaFile.file);\n          formData.append('userId', userId);\n          const uploadResponse = await fetch(`${API_URL}/api/upload/media`, {\n            method: 'POST',\n            headers: {\n              'Authorization': `Bearer ${token}`\n            },\n            body: formData\n          });\n          if (uploadResponse.ok) {\n            const uploadResult = await uploadResponse.json();\n            uploadedMediaUrls.push({\n              mediaUrl: uploadResult.url,\n              mediaType: mediaFile.type,\n              fileName: mediaFile.fileName,\n              fileSize: mediaFile.fileSize,\n              mimeType: mediaFile.mimeType,\n              mediaOrder: i,\n              isThumbnail: i === 0\n            });\n          } else {\n            throw new Error(`Failed to upload ${mediaFile.fileName}`);\n          }\n        }\n      }\n\n      // Use first uploaded media as thumbnail, or null if no media\n      const thumbnailUrl = uploadedMediaUrls.length > 0 ? uploadedMediaUrls[0].mediaUrl : null;\n\n      // Create blog with uploaded media URLs\n      const blogData = {\n        userId: userId,\n        title: title.trim(),\n        content: content.trim(),\n        customDestinations: [destination.trim()],\n        thumbnailUrl: thumbnailUrl,\n        media: uploadedMediaUrls,\n        status: \"published\"\n      };\n      const response = await fetch(`${API_URL}/api/blogs`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`\n        },\n        body: JSON.stringify(blogData)\n      });\n      if (response.ok) {\n        setSuccess(true);\n        setTitle('');\n        setContent('');\n        setDestination('');\n        setMediaFiles([]);\n        setTimeout(() => navigate('/profile'), 2000);\n      } else {\n        const data = await response.json();\n        setError(data.message || 'Failed to create blog post');\n      }\n    } catch (err) {\n      console.error('Error creating blog:', err);\n      setError('Network error. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // If no user data is available, show login message\n  if (!user && !JSON.parse(localStorage.getItem('user'))) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-blog-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-blog-card\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Please log in to create a blog post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this);\n  }\n  const showError = field => {\n    return touched[field] && !eval(field).trim();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-blog-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-blog-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: (user === null || user === void 0 ? void 0 : user.profile_image) || 'https://via.placeholder.com/40',\n          alt: \"Profile\",\n          className: \"profile-pic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: (user === null || user === void 0 ? void 0 : user.username) || 'User'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `destination-input ${showError('destination') ? 'error' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"location-icon\",\n              children: \"\\uD83D\\uDCCD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: destination,\n              onChange: e => setDestination(e.target.value),\n              onBlur: () => handleBlur('destination'),\n              placeholder: \"Where are you? *\",\n              className: \"transparent-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), showError('destination') && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"field-error\",\n            children: \"Destination is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"post-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `title-input-container ${showError('title') ? 'error' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            onBlur: () => handleBlur('title'),\n            placeholder: \"Give your post a title *\",\n            className: \"title-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), showError('title') && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"field-error\",\n            children: \"Title is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `content-input-container ${showError('content') ? 'error' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: content,\n            onChange: e => setContent(e.target.value),\n            onBlur: () => handleBlur('content'),\n            placeholder: \"What's on your mind? *\",\n            className: \"content-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), showError('content') && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"field-error\",\n            children: \"Content is required\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), mediaFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"media-preview-grid\",\n          children: mediaFiles.map((media, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"media-preview-container\",\n            children: [media.type === 'image' ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: media.preview,\n              alt: `Preview ${index}`,\n              className: \"media-preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"video\", {\n              src: media.preview,\n              className: \"media-preview\",\n              controls: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"remove-media-btn\",\n              onClick: () => removeMedia(index),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"media-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"media-btn\",\n              onClick: () => fileInputRef.current.click(),\n              disabled: mediaLoading,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"media-icon\",\n                children: \"\\uD83D\\uDDBC\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 17\n              }, this), mediaLoading ? 'Processing...' : 'Photo/Video']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: fileInputRef,\n              type: \"file\",\n              accept: \"image/*,video/*\",\n              multiple: true,\n              onChange: handleMediaUpload,\n              style: {\n                display: 'none'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this), mediaFiles.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"media-count\",\n              children: [mediaFiles.length, \" file\", mediaFiles.length !== 1 ? 's' : '', \" selected\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 23\n          }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"success-message\",\n            children: \"Post created successfully! Redirecting...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"post-button\",\n            disabled: loading,\n            children: loading ? 'Posting...' : 'Post'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateBlogPage, \"5Ww1sJiCgUl6aK1euG7Z287MQGs=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = CreateBlogPage;\nexport default CreateBlogPage;\nvar _c;\n$RefreshReg$(_c, \"CreateBlogPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","useAuth","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_URL","CreateBlogPage","_s","navigate","user","title","setTitle","content","setContent","destination","setDestination","mediaFiles","setMediaFiles","thumbnailFile","setThumbnailFile","loading","setLoading","mediaLoading","setMediaLoading","thumbnailLoading","setThumbnailLoading","error","setError","success","setSuccess","touched","setTouched","fileInputRef","thumbnailInputRef","console","log","storedUser","JSON","parse","localStorage","getItem","handleMediaUpload","event","files","Array","from","target","length","newMediaFiles","forEach","file","size","name","mediaFile","type","startsWith","preview","URL","createObjectURL","fileName","fileSize","mimeType","push","prev","handleThumbnailUpload","thumbnailData","removeMedia","index","revokeObjectURL","splice","removeThumbnail","handleBlur","field","validateForm","errors","trim","handleSubmit","e","preventDefault","validationErrors","Object","values","some","userId","id","token","uploadedMediaUrls","i","formData","FormData","append","uploadResponse","fetch","method","headers","body","ok","uploadResult","json","mediaUrl","url","mediaType","mediaOrder","isThumbnail","Error","thumbnailUrl","blogData","customDestinations","media","status","response","stringify","setTimeout","data","message","err","className","children","_jsxFileName","lineNumber","columnNumber","showError","eval","src","profile_image","alt","username","value","onChange","onBlur","placeholder","onSubmit","map","controls","onClick","current","click","disabled","ref","accept","multiple","style","display","_c","$RefreshReg$"],"sources":["D:/CSE_408/frontend/src/pages/CreateBlogPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport './CreateBlogPage.css';\r\n\r\nconst API_URL = process.env.REACT_APP_URL;\r\n\r\nconst CreateBlogPage = () => {\r\n  const navigate = useNavigate();\r\n  const { user } = useAuth();\r\n  const [title, setTitle] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [destination, setDestination] = useState('');\r\n  const [mediaFiles, setMediaFiles] = useState([]);\r\n  const [thumbnailFile, setThumbnailFile] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [mediaLoading, setMediaLoading] = useState(false);\r\n  const [thumbnailLoading, setThumbnailLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState(false);\r\n  const [touched, setTouched] = useState({\r\n    title: false,\r\n    content: false,\r\n    destination: false\r\n  });\r\n  const fileInputRef = useRef(null);\r\n  const thumbnailInputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Debug log to see user data\r\n    console.log('Current user data:', user);\r\n    // Get stored user data as backup\r\n    const storedUser = JSON.parse(localStorage.getItem('user'));\r\n    console.log('Stored user data:', storedUser);\r\n\r\n    // If no user data is available, redirect to login\r\n    if (!user && !storedUser) {\r\n      navigate('/login');\r\n    }\r\n  }, [user, navigate]);\r\n\r\n  const handleMediaUpload = (event) => {\r\n    const files = Array.from(event.target.files);\r\n    \r\n    if (files.length === 0) return;\r\n    \r\n    setMediaLoading(true);\r\n    setError('');\r\n    \r\n    const newMediaFiles = [];\r\n    \r\n    files.forEach(file => {\r\n      // Check file size (limit to 50MB)\r\n      if (file.size > 50 * 1024 * 1024) {\r\n        setError(`File ${file.name} is too large. Maximum size is 50MB.`);\r\n        return;\r\n      }\r\n      \r\n      const mediaFile = {\r\n        file,\r\n        type: file.type.startsWith('image/') ? 'image' : 'video',\r\n        preview: URL.createObjectURL(file),\r\n        fileName: file.name,\r\n        fileSize: file.size,\r\n        mimeType: file.type\r\n      };\r\n      newMediaFiles.push(mediaFile);\r\n    });\r\n    \r\n    setMediaFiles(prev => [...prev, ...newMediaFiles]);\r\n    setMediaLoading(false);\r\n  };\r\n\r\n  const handleThumbnailUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    \r\n    if (!file) return;\r\n    \r\n    setThumbnailLoading(true);\r\n    setError('');\r\n    \r\n    // Check if it's an image\r\n    if (!file.type.startsWith('image/')) {\r\n      setError('Thumbnail must be an image file.');\r\n      setThumbnailLoading(false);\r\n      return;\r\n    }\r\n    \r\n    // Check file size (limit to 10MB for thumbnails)\r\n    if (file.size > 10 * 1024 * 1024) {\r\n      setError(`Thumbnail ${file.name} is too large. Maximum size is 10MB.`);\r\n      setThumbnailLoading(false);\r\n      return;\r\n    }\r\n    \r\n    const thumbnailData = {\r\n      file,\r\n      preview: URL.createObjectURL(file),\r\n      fileName: file.name,\r\n      fileSize: file.size,\r\n      mimeType: file.type\r\n    };\r\n    \r\n    setThumbnailFile(thumbnailData);\r\n    setThumbnailLoading(false);\r\n  };\r\n\r\n  const removeMedia = (index) => {\r\n    const newMediaFiles = [...mediaFiles];\r\n    URL.revokeObjectURL(newMediaFiles[index].preview);\r\n    newMediaFiles.splice(index, 1);\r\n    setMediaFiles(newMediaFiles);\r\n  };\r\n\r\n  const removeThumbnail = () => {\r\n    if (thumbnailFile && thumbnailFile.preview) {\r\n      URL.revokeObjectURL(thumbnailFile.preview);\r\n    }\r\n    setThumbnailFile(null);\r\n  };\r\n\r\n  const handleBlur = (field) => {\r\n    setTouched(prev => ({ ...prev, [field]: true }));\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const errors = {\r\n      title: !title.trim() ? 'Title is required' : '',\r\n      content: !content.trim() ? 'Content is required' : '',\r\n      destination: !destination.trim() ? 'Destination is required' : ''\r\n    };\r\n\r\n    // Set all fields as touched when validating\r\n    setTouched({\r\n      title: true,\r\n      content: true,\r\n      destination: true\r\n    });\r\n\r\n    return errors;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const validationErrors = validateForm();\r\n    \r\n    if (Object.values(validationErrors).some(error => error)) {\r\n      setError('Please fill in all required fields');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    setError('');\r\n    setSuccess(false);\r\n\r\n    const storedUser = JSON.parse(localStorage.getItem('user'));\r\n    const userId = user?.id || storedUser?.id;\r\n\r\n    if (!userId) {\r\n      setError('User ID not found. Please log in again.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      setError('Authentication token not found. Please log in again.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // First, upload media files if any\r\n      let uploadedMediaUrls = [];\r\n      \r\n      if (mediaFiles.length > 0) {\r\n        for (let i = 0; i < mediaFiles.length; i++) {\r\n          const mediaFile = mediaFiles[i];\r\n          const formData = new FormData();\r\n          formData.append('file', mediaFile.file);\r\n          formData.append('userId', userId);\r\n\r\n          const uploadResponse = await fetch(`${API_URL}/api/upload/media`, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Authorization': `Bearer ${token}`\r\n            },\r\n            body: formData,\r\n          });\r\n\r\n          if (uploadResponse.ok) {\r\n            const uploadResult = await uploadResponse.json();\r\n            uploadedMediaUrls.push({\r\n              mediaUrl: uploadResult.url,\r\n              mediaType: mediaFile.type,\r\n              fileName: mediaFile.fileName,\r\n              fileSize: mediaFile.fileSize,\r\n              mimeType: mediaFile.mimeType,\r\n              mediaOrder: i,\r\n              isThumbnail: i === 0\r\n            });\r\n          } else {\r\n            throw new Error(`Failed to upload ${mediaFile.fileName}`);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Use first uploaded media as thumbnail, or null if no media\r\n      const thumbnailUrl = uploadedMediaUrls.length > 0 ? uploadedMediaUrls[0].mediaUrl : null;\r\n\r\n      // Create blog with uploaded media URLs\r\n      const blogData = {\r\n        userId: userId,\r\n        title: title.trim(),\r\n        content: content.trim(),\r\n        customDestinations: [destination.trim()],\r\n        thumbnailUrl: thumbnailUrl,\r\n        media: uploadedMediaUrls,\r\n        status: \"published\"\r\n      };\r\n\r\n      const response = await fetch(`${API_URL}/api/blogs`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(blogData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        setSuccess(true);\r\n        setTitle('');\r\n        setContent('');\r\n        setDestination('');\r\n        setMediaFiles([]);\r\n        setTimeout(() => navigate('/profile'), 2000);\r\n      } else {\r\n        const data = await response.json();\r\n        setError(data.message || 'Failed to create blog post');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error creating blog:', err);\r\n      setError('Network error. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // If no user data is available, show login message\r\n  if (!user && !JSON.parse(localStorage.getItem('user'))) {\r\n    return (\r\n      <div className=\"create-blog-container\">\r\n        <div className=\"create-blog-card\">\r\n          <h2>Please log in to create a blog post</h2>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const showError = (field) => {\r\n    return touched[field] && !eval(field).trim();\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-blog-container\">\r\n      <div className=\"create-blog-card\">\r\n        <div className=\"post-header\">\r\n          <img \r\n            src={user?.profile_image || 'https://via.placeholder.com/40'} \r\n            alt=\"Profile\" \r\n            className=\"profile-pic\"\r\n          />\r\n          <div className=\"user-info\">\r\n            <h3>{user?.username || 'User'}</h3>\r\n            <div className={`destination-input ${showError('destination') ? 'error' : ''}`}>\r\n              <span className=\"location-icon\">📍</span>\r\n              <input\r\n                type=\"text\"\r\n                value={destination}\r\n                onChange={(e) => setDestination(e.target.value)}\r\n                onBlur={() => handleBlur('destination')}\r\n                placeholder=\"Where are you? *\"\r\n                className=\"transparent-input\"\r\n              />\r\n            </div>\r\n            {showError('destination') && (\r\n              <span className=\"field-error\">Destination is required</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"post-form\">\r\n          <div className={`title-input-container ${showError('title') ? 'error' : ''}`}>\r\n            <input\r\n              type=\"text\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              onBlur={() => handleBlur('title')}\r\n              placeholder=\"Give your post a title *\"\r\n              className=\"title-input\"\r\n            />\r\n            {showError('title') && (\r\n              <span className=\"field-error\">Title is required</span>\r\n            )}\r\n          </div>\r\n          \r\n          <div className={`content-input-container ${showError('content') ? 'error' : ''}`}>\r\n            <textarea\r\n              value={content}\r\n              onChange={(e) => setContent(e.target.value)}\r\n              onBlur={() => handleBlur('content')}\r\n              placeholder=\"What's on your mind? *\"\r\n              className=\"content-input\"\r\n            />\r\n            {showError('content') && (\r\n              <span className=\"field-error\">Content is required</span>\r\n            )}\r\n          </div>\r\n\r\n          {mediaFiles.length > 0 && (\r\n            <div className=\"media-preview-grid\">\r\n              {mediaFiles.map((media, index) => (\r\n                <div key={index} className=\"media-preview-container\">\r\n                  {media.type === 'image' ? (\r\n                    <img src={media.preview} alt={`Preview ${index}`} className=\"media-preview\" />\r\n                  ) : (\r\n                    <video src={media.preview} className=\"media-preview\" controls />\r\n                  )}\r\n                  <button \r\n                    type=\"button\" \r\n                    className=\"remove-media-btn\"\r\n                    onClick={() => removeMedia(index)}\r\n                  >\r\n                    ×\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"post-actions\">\r\n            <div className=\"media-buttons\">\r\n              <button \r\n                type=\"button\" \r\n                className=\"media-btn\"\r\n                onClick={() => fileInputRef.current.click()}\r\n                disabled={mediaLoading}\r\n              >\r\n                <span className=\"media-icon\">🖼️</span>\r\n                {mediaLoading ? 'Processing...' : 'Photo/Video'}\r\n              </button>\r\n              <input\r\n                ref={fileInputRef}\r\n                type=\"file\"\r\n                accept=\"image/*,video/*\"\r\n                multiple\r\n                onChange={handleMediaUpload}\r\n                style={{ display: 'none' }}\r\n              />\r\n              {mediaFiles.length > 0 && (\r\n                <span className=\"media-count\">\r\n                  {mediaFiles.length} file{mediaFiles.length !== 1 ? 's' : ''} selected\r\n                </span>\r\n              )}\r\n            </div>\r\n\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n            {success && (\r\n              <div className=\"success-message\">\r\n                Post created successfully! Redirecting...\r\n              </div>\r\n            )}\r\n\r\n            <button \r\n              type=\"submit\" \r\n              className=\"post-button\"\r\n              disabled={loading}\r\n            >\r\n              {loading ? 'Posting...' : 'Post'}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateBlogPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}