version: '3.8'

services:
  db:
    image: postgres:17-alpine
    ports:
      - "5430:5432"
    environment:
      - POSTGRES_DB=tourify
      - POSTGRES_USER=tourify_user
      - POSTGRES_PASSWORD=tourify123
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - tourify-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tourify_user -d tourify"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  backend:
    build:
      context: ./backend/tourify
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/tourify
      - SPRING_DATASOURCE_USERNAME=tourify_user
      - SPRING_DATASOURCE_PASSWORD=tourify123
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_GENERATE_DDL=true
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.PostgreSQLDialect
    networks:
      - tourify-network
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/auth/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://localhost:8080
    networks:
      - tourify-network
    depends_on:
      backend:
        condition: service_healthy

volumes:
  postgres_data:
    name: tourify-postgres-data

networks:
  tourify-network:
    driver: bridge 